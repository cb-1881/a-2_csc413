public class Account {
    private String accountNumber;
    private double balance;
    private String customerId;

    // Constructor
    public Account(String accountNumber, double balance, String customerId) {
        this.accountNumber = accountNumber;
        this.balance = balance;
        this.customerId = customerId;
    }

    // Getters
    public String getAccountNumber() {
                return accountNumber;
    }

    public double getBalance() {
        return balance;
    }

    public String getCustomerId() {
        return customerId;
    }

    // Setters
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public void setCustomerId(String customerId) {
        this.customerId = customerId;
    }

    // Additional functionality methods can be added here.
    // Example: deposit, withdraw, etc.
}
 
    

public class Administrator {
    private String staffId;
    private String name;

    // Constructor
    public Administrator(String staffId, String name) {
        this.staffId = staffId;
        this.name = name;
    }

    // Getters and Setters
    public String getStaffId() {
        return staffId;
    }

    public void setStaffId(String staffId) {
        this.staffId = staffId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
//toString() method
  
  
    @Override
    public String toString() {
        return "Administrator{" +
                "staffId='" + staffId + '\'' +
                ", name='" + name + '\'' +
                '}';
    }
    
  // Methods for account and system management
}
public class Customer implements Comparable<Customer>{
  private String customerId;
  private String name;
  private String accountNumber;
  private double balance;


  public Customer() {
    // Constructor body can be empty
}
  // Constructor
  public Customer(String customerId, String name, String accountNumber, double balance) {
    this.customerId = customerId;
    this.name = name;
    this.accountNumber = accountNumber;
    this.balance = balance;
  }


  @Override
  public int compareTo(Customer other) {
      return Double.compare(other.balance, this.balance);
  }

  // Getters and Setters
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public double getBalance() {
    return balance;
  }

  public void setBalance(double balance) {
    this.balance = balance;
  }
  // toString method
  @Override
  public String toString() {
      return " Customer  {" +
              "customerId='" + customerId + '\'' +
              ", name='" + name + '\'' +
              ", accountNumber='" + accountNumber + '\'' +
              ", balance=" + balance +
              '}' + "\n" ;
  }


  // Additional methods to manipulate the account
}
public class Teller {
    private String tellerId;
    private String name;
    private String branchId;

    // Constructors
    public Teller() {
        
    }

    public Teller(String tellerId, String name, String branchId) {
        this.tellerId = tellerId;
        this.name = name;
        this.branchId = branchId;
    }

    // Getters and setters
    public String getTellerId() {
        return tellerId;
    }

    public void setTellerId(String tellerId) {
        this.tellerId = tellerId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getBranchId() {
        return branchId;
    }

    public void setBranchId(String branchId) {
        this.branchId = branchId;
    }
}

public class Security {
    private String securityId;
    private String name;
    private String level; //  represent clearance level for other accounts

    // Constructors
    public Security() {

    }

    public Security(String securityId, String name, String level) {
        this.securityId = securityId;
        this.name = name;
        this.level = level;
    }

    // Getters and setters
    public String getSecurityId() {
        return securityId;
    }

    public void setSecurityId(String securityId) {
        this.securityId = securityId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLevel() {
        return level;
    }

    public void setLevel(String level) {
        this.level = level;
    }
}

import java.util.Date;

public class Transaction {
    private String transactionId;
    private String accountNumber;
    private String transactionType; // e.g., "DEPOSIT", "WITHDRAWAL"
    private double amount;
    private Date timestamp;

    // Constructor
    public Transaction(String transactionId, String accountNumber, String transactionType, double amount, Date timestamp) {
        this.transactionId = transactionId;
        this.accountNumber = accountNumber;
        this.transactionType = transactionType;
        this.amount = amount;
        this.timestamp = timestamp;
    }

    // Getters
    public String getTransactionId() {
        return transactionId;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getTransactionType() {
        return transactionType;
    }

    public double getAmount() {
        return amount;
    }

    public Date getTimestamp() {
        return timestamp;
    }

    // Setters
    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }

    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }

    // Additional functionality methods can be added here.
    // Example: processTransaction, validateTransaction, etc.
}
